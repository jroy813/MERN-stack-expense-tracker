{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","utils/format.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","id","delete","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","numberWithCommas","x","toString","replace","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","useEffect","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","console","log","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.975a1b9c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'GET_TRANSACTIONS' :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                transactions: action.payload\r\n            }\r\n        case 'DELETE_TRANSACTION' :\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION' :\r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.payload]\r\n            }\r\n        case 'TRANSACTION_ERROR' :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n\r\n// Initial State\r\nconst initialState = {\r\n    transactions: [],\r\n    error: null,\r\n    loading: true\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n    \r\n    // Actions\r\n    async function getTransactions() {\r\n        try {\r\n            const res = await axios.get('/api/v1/transactions');\r\n            \r\n            dispatch({\r\n               type: 'GET_TRANSACTIONS',\r\n               payload: res.data.data \r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: error.response.data.error\r\n             });\r\n        }\r\n    }\r\n    \r\n    async function deleteTransaction(id) {\r\n        try {\r\n            await axios.delete(`/api/v1/transactions/${id}`);\r\n            \r\n            dispatch({\r\n                type: 'DELETE_TRANSACTION',\r\n                payload: id\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: error.response.data.error\r\n             });\r\n        }\r\n    }\r\n    \r\n    async function addTransaction(transaction) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        try {\r\n            const res = await axios.post('/api/v1/transactions', transaction, config);\r\n            \r\n            dispatch({\r\n                type: 'ADD_TRANSACTION',\r\n                payload: res.data.data\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: error.response.data.error\r\n             });\r\n        }\r\n    }\r\n    \r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        getTransactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>);\r\n}","export function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    \r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    \r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>${numberWithCommas(total)}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const IncomeExpenses = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    \r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n    const expense = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n    ).toFixed(2);\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"inc-exp-container\">\r\n                <div>\r\n                    <h4>Income</h4>\r\n                    <p className=\"money plus\">+${numberWithCommas(income)}</p>\r\n                </div>\r\n                <div>\r\n                    <h4>Expense</h4>\r\n                    <p className=\"money minus\">-${numberWithCommas(expense)}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n    \r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n    \r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n            {transaction.text} <span>{sign}${numberWithCommas(Math.abs(transaction.amount))}</span>\r\n            <button className=\"delete-btn\" onClick={() => deleteTransaction(transaction._id)}>x</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\n\r\nexport const TransactionList = () => {\r\n    const { transactions, getTransactions } = useContext(GlobalContext);\r\n    \r\n    useEffect(() => {\r\n       getTransactions(); \r\n       // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                { transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />)) }\r\n            </ul>\r\n        </>\r\n    )\r\n}","import React, {useState, useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n    \r\n    const { addTransaction } = useContext(GlobalContext);\r\n    \r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 10000000),\r\n            text,\r\n            amount: +amount\r\n        }\r\n        \r\n        console.log(newTransaction);\r\n        \r\n        addTransaction(newTransaction);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">Amount <br />(negative - expense, positive - income)</label>\r\n                    <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\nimport './App.css';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n    return (\n    <GlobalProvider>\n        <Header />\n        <div className=\"container\">\n            <Balance />\n            <IncomeExpenses />\n            <TransactionList />\n            <AddTransaction />\n        </div>\n    </GlobalProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}